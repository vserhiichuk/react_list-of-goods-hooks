{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","Default","sortType","setSortType","isReversed","setIsReversed","visibleGoods","goods","preparedGoods","Name","sort","good1","good2","localeCompare","Lenght","reverse","getPreparedGoods","isResetButtonVisible","className","type","cn","onClick","isPrevReversed","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,YAAAA,E,gBAAAA,E,YAAAA,M,KA2CE,IAAME,EAAM,WACjB,MAAgCC,mBAASH,EAASI,SAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KAEMC,EApCR,SACEC,EADF,GAMa,IAHTL,EAGQ,EAHRA,SACAE,EAEQ,EAFRA,WAGII,EAAa,YAAOD,GAE1B,GAAIL,EACF,OAAQA,GACN,KAAKL,EAASY,KACZD,EAAcE,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MACzD,MAEF,KAAKf,EAASiB,OACZN,EACGE,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMT,GAAYU,EAAMV,MAYxD,OAJIE,GACFI,EAAcO,UAGTP,EAOwBQ,CAC7BlB,EACA,CAAEI,WAAUE,eAQRa,EAAuBf,GAAYE,EAEzC,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CACE,WAAYlB,IAAaL,EAASY,OAGtCY,QAAS,WACPlB,EAAYN,EAASY,OAVzB,iCAgBA,wBACEU,KAAK,SACLD,UAAWE,IAAG,SAAU,aAAc,CACpC,WAAYlB,IAAaL,EAASiB,SAEpCO,QAAS,WACPlB,EAAYN,EAASiB,SANzB,4BAYA,wBACEK,KAAK,SACLD,UAAWE,IAAG,SAAU,aAAc,CACpC,YAAahB,IAEfiB,QAAS,kBAAMhB,GAAc,SAACiB,GAAD,OAAqBA,MALpD,qBAUCL,GACC,wBACEE,KAAK,SACLD,UAAU,4BACVG,QApDmB,WAC3BlB,EAAYN,EAASI,SACrBI,GAAc,IA+CR,sBAUJ,6BACGC,EAAaiB,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YChIlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.03704c55.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  Name = 'name',\n  Lenght = 'length',\n  Default = '',\n}\n\ninterface SortingOptions {\n  sortType: SortType,\n  isReversed: boolean,\n}\n\nfunction getPreparedGoods(\n  goods: string[],\n  {\n    sortType,\n    isReversed,\n  }: SortingOptions,\n): string[] {\n  const preparedGoods = [...goods];\n\n  if (sortType) {\n    switch (sortType) {\n      case SortType.Name:\n        preparedGoods.sort((good1, good2) => good1.localeCompare(good2));\n        break;\n\n      case SortType.Lenght:\n        preparedGoods\n          .sort((good1, good2) => good1[sortType] - good2[sortType]);\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  if (isReversed) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sortType, setSortType] = useState(SortType.Default);\n  const [isReversed, setIsReversed] = useState(false);\n\n  const visibleGoods: string[] = getPreparedGoods(\n    goodsFromServer,\n    { sortType, isReversed },\n  );\n\n  const resetSortingSettings = () => {\n    setSortType(SortType.Default);\n    setIsReversed(false);\n  };\n\n  const isResetButtonVisible = sortType || isReversed;\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-info',\n            {\n              'is-light': sortType !== SortType.Name,\n            },\n          )}\n          onClick={() => {\n            setSortType(SortType.Name);\n          }}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-success', {\n            'is-light': sortType !== SortType.Lenght,\n          })}\n          onClick={() => {\n            setSortType(SortType.Lenght);\n          }}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-warning', {\n            'is-light': !isReversed,\n          })}\n          onClick={() => setIsReversed((isPrevReversed) => !isPrevReversed)}\n        >\n          Reverse\n        </button>\n\n        {isResetButtonVisible && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={resetSortingSettings}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li data-cy=\"Good\" key={good}>\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}